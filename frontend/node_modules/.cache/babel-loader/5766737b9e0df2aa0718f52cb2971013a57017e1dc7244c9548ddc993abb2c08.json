{"ast":null,"code":"var _jsxFileName = \"/Users/aasthachandel/my-app/frontend/src/components/Home.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { toast, ToastContainer } from 'react-toastify';\n// import { useNavigate } from 'react-router-dom';  // Import useNavigate for redirection\n// import 'react-toastify/dist/ReactToastify.css';\n// import './Home.css'; // Import the CSS file\n\n// const Home = () => {\n\n//     const [users, setUsers] = useState([]);\n//     const [friends, setFriends] = useState([]);\n//     const [recommendations, setRecommendations] = useState([]);\n//     const [friendRequests, setFriendRequests] = useState([]);\n//     const [searchTerm, setSearchTerm] = useState(''); // State for search term\n//     const navigate = useNavigate();  // Initialize useNavigate\n\n//     const token = localStorage.getItem('token');\n\n//     useEffect(() => {\n//         const fetchData = async () => {\n//             try {\n//                 // Fetch users\n//                 const userResponse = await axios.get('http://localhost:3000/api/users', {\n//                     headers: { Authorization: `Bearer ${token}` }\n//                 });\n//                 setUsers(userResponse.data);\n\n//                 // Fetch friends\n//                 const friendResponse = await axios.get('http://localhost:3000/api/friends', {\n//                     headers: { Authorization: `Bearer ${token}` }\n//                 });\n//                 setFriends(friendResponse.data);\n\n//                 // Fetch recommendations\n//                 const recommendationResponse = await axios.get('http://localhost:3000/api/recommendations', {\n//                     headers: { Authorization: `Bearer ${token}` }\n//                 });\n//                 setRecommendations(recommendationResponse.data);\n//                 console.log(\"recomm\", recommendationResponse.data)\n//                 // Fetch friend requests\n//                 const requestResponse = await axios.get('http://localhost:3000/api/friend-requests', {\n//                     headers: { Authorization: `Bearer ${token}` }\n//                 });\n//                 setFriendRequests(requestResponse.data);\n\n//             } catch (error) {\n//                 console.error('Error fetching data', error);\n//             }\n//         };\n//         fetchData();\n//     }, [token]);\n\n//     const addFriend = async (userId) => {\n//         try {\n//             await axios.post(\n//                 'http://localhost:3000/api/friend-request',\n//                 { userId },\n//                 { headers: { Authorization: `Bearer ${token}` } }\n//             );\n//             toast.success(\"Friend request sent\");\n\n//             setUsers(users.filter(user => user._id !== userId));\n//             setRecommendations(recommendations.filter(rec => rec._id !== userId));\n\n//             const friendResponse = await axios.get('http://localhost:3000/api/friends', {\n//                 headers: { Authorization: `Bearer ${token}` }\n//             });\n//             setFriends(friendResponse.data);\n\n//         } catch (error) {\n//             console.error('Error sending friend request', error.response ? error.response.data : error.message);\n//         }\n//     };\n\n//     const acceptRequest = async (userId) => {\n//         try {\n//             await axios.post(\n//                 'http://localhost:3000/api/friend-request/accept',\n//                 { userId },\n//                 { headers: { Authorization: `Bearer ${token}` } }\n//             );\n//             toast.success(\"Friend request accepted\");\n\n//             setFriendRequests(friendRequests.filter(request => request._id !== userId));\n\n//             const friendResponse = await axios.get('http://localhost:3000/api/friends', {\n//                 headers: { Authorization: `Bearer ${token}` }\n//             });\n//             setFriends(friendResponse.data);\n\n//         } catch (error) {\n//             console.error('Error accepting friend request', error.response ? error.response.data : error.message);\n//         }\n//     };\n\n//     const rejectRequest = async (userId) => {\n//         try {\n//             await axios.post(\n//                 'http://localhost:3000/api/friend-request/reject',\n//                 { userId },\n//                 { headers: { Authorization: `Bearer ${token}` } }\n//             );\n//             toast.success(\"Friend request rejected\");\n\n//             setFriendRequests(friendRequests.filter(request => request._id !== userId));\n\n//         } catch (error) {\n//             console.error('Error rejecting friend request', error.response ? error.response.data : error.message);\n//         }\n//     };\n\n//     const removeFriend = async (friendId) => {\n//         try {\n//             await axios.delete(`http://localhost:3000/api/friend/${friendId}`, {\n//                 headers: { Authorization: `Bearer ${token}` }\n//             });\n//             toast.success(\"Friend removed\");\n\n//             setFriends(friends.filter(friend => friend._id !== friendId));\n\n//         } catch (error) {\n//             console.error('Error removing friend', error.response ? error.response.data : error.message);\n//         }\n//     };\n\n//     // Logout function\n//     const logout = () => {\n//         localStorage.removeItem('token');  // Remove token from localStorage\n//         toast.success(\"Logged out successfully\");\n//         navigate('/login');  // Redirect to login page\n//     };\n\n//     // Filter users based on search term\n//     const filteredUsers = users.filter(user =>\n//         user.username.toLowerCase().includes(searchTerm.toLowerCase())\n//     );\n\n//     return (\n\n//         <div className=\"container\">\n\n//             <h2 className=\"title\">All Users</h2>\n//             <input\n//                 type=\"text\"\n//                 placeholder=\"Search users...\"\n//                 value={searchTerm}\n//                 onChange={(e) => setSearchTerm(e.target.value)}  // Update search term\n//                 className=\"search-input\"\n//             />\n\n//             <div className=\"list\">\n//                 {filteredUsers.length === 0 ? (\n//                     <p>No users found</p>\n//                 ) : (\n//                     filteredUsers.map(user => (\n//                         <div className=\"user-card\" key={user._id}>\n//                             <span className=\"username\">{user.username}</span>\n//                             <button className=\"btn btn-add\" onClick={() => addFriend(user._id)}>Add Friend</button>\n//                         </div>\n//                     ))\n//                 )}\n//             </div>\n\n//             <h2 className=\"title\">Friends List</h2>\n//             <div className=\"list\">\n//                 {friends.length === 0 ? (\n//                     <p>You have no friends yet.</p>\n//                 ) : (\n//                     friends.map(friend => (\n//                         <div className=\"user-card\" key={friend._id}>\n//                             <span className=\"username\">{friend.username}</span>\n//                             <button className=\"btn btn-remove\" onClick={() => removeFriend(friend._id)}>Unfriend</button>\n//                         </div>\n//                     ))\n//                 )}\n//             </div>\n\n//             <h2 className=\"title\">Recommendations</h2>\n//             <div className=\"list\">\n//                 {recommendations.length === 0 ? (\n//                     <p>No recommendations found</p>\n//                 ) : (\n//                     recommendations.map(rec => (\n//                         <div className=\"user-card\" key={rec._id}>\n//                             <span className=\"username\">{rec.username}</span>\n//                             <span className=\"mutual-friends\">Mutual Friends: {rec.mutualFriendsCount}</span>\n//                             <button className=\"btn btn-add\" onClick={() => addFriend(rec._id)}>Add Friend</button>\n//                         </div>\n//                     ))\n//                 )}\n//             </div>\n\n//             <h2 className=\"title\">Friend Requests</h2>\n//             <div className=\"list\">\n//                 {friendRequests.length === 0 ? (\n//                     <p>No friend requests</p>\n//                 ) : (\n//                     friendRequests.map(request => (\n//                         <div className=\"user-card\" key={request._id}>\n//                             <span className=\"username\">{request.username}</span>\n//                             <button className=\"btn btn-accept\" onClick={() => acceptRequest(request._id)}>Accept</button>\n//                             <button className=\"btn btn-reject\" onClick={() => rejectRequest(request._id)}>Reject</button>\n//                         </div>\n//                     ))\n//                 )}\n//             </div>\n\n//             <button className=\"btn btn-logout\" onClick={logout}>Logout</button>  {/* Logout button */}\n\n//             <ToastContainer />\n//         </div>\n//     );\n// };\n\n// export default Home;\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [friends, setFriends] = useState([]);\n  const [recommendations, setRecommendations] = useState([]);\n  const [friendRequests, setFriendRequests] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [currentUser, setCurrentUser] = useState(null); // State for current user\n  const navigate = useNavigate();\n  const token = localStorage.getItem('token');\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch current user\n        const userResponse = await axios.get('http://localhost:3000/api/me', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setCurrentUser(userResponse.data);\n\n        // Fetch users\n        const usersResponse = await axios.get('http://localhost:3000/api/users', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setUsers(usersResponse.data);\n\n        // Fetch friends\n        const friendsResponse = await axios.get('http://localhost:3000/api/friends', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setFriends(friendsResponse.data);\n\n        // Fetch recommendations\n        const recommendationsResponse = await axios.get('http://localhost:3000/api/recommendations', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setRecommendations(recommendationsResponse.data);\n\n        // Fetch friend requests\n        const friendRequestsResponse = await axios.get('http://localhost:3000/api/friend-requests', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setFriendRequests(friendRequestsResponse.data);\n      } catch (error) {\n        console.error('Error fetching data', error);\n      }\n    };\n    fetchData();\n  }, [token]);\n  const addFriend = async userId => {\n    try {\n      await axios.post('http://localhost:3000/api/friend-request', {\n        userId\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      toast.success(\"Friend request sent\");\n      setUsers(users.filter(user => user._id !== userId));\n      setRecommendations(recommendations.filter(rec => rec._id !== userId));\n      const friendResponse = await axios.get('http://localhost:3000/api/friends', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setFriends(friendResponse.data);\n    } catch (error) {\n      console.error('Error sending friend request', error.response ? error.response.data : error.message);\n    }\n  };\n  const acceptRequest = async userId => {\n    try {\n      await axios.post('http://localhost:3000/api/friend-request/accept', {\n        userId\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      toast.success(\"Friend request accepted\");\n      setFriendRequests(friendRequests.filter(request => request._id !== userId));\n      const friendResponse = await axios.get('http://localhost:3000/api/friends', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setFriends(friendResponse.data);\n    } catch (error) {\n      console.error('Error accepting friend request', error.response ? error.response.data : error.message);\n    }\n  };\n  const rejectRequest = async userId => {\n    try {\n      await axios.post('http://localhost:3000/api/friend-request/reject', {\n        userId\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      toast.success(\"Friend request rejected\");\n      setFriendRequests(friendRequests.filter(request => request._id !== userId));\n    } catch (error) {\n      console.error('Error rejecting friend request', error.response ? error.response.data : error.message);\n    }\n  };\n  const removeFriend = async friendId => {\n    try {\n      await axios.delete(`http://localhost:3000/api/friend/${friendId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      toast.success(\"Friend removed\");\n      setFriends(friends.filter(friend => friend._id !== friendId));\n    } catch (error) {\n      console.error('Error removing friend', error.response ? error.response.data : error.message);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    toast.success(\"Logged out successfully\");\n    navigate('/login');\n  };\n  const filteredUsers = users.filter(user => user.username.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [currentUser && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome, \", currentUser.username, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 21\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"All Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search users...\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value),\n      className: \"search-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: filteredUsers.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No users found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 21\n      }, this) : filteredUsers.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"username\",\n          children: user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-add\",\n          onClick: () => addFriend(user._id),\n          children: \"Add Friend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 29\n        }, this)]\n      }, user._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"Friends List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: friends.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You have no friends yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 21\n      }, this) : friends.map(friend => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"username\",\n          children: friend.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-remove\",\n          onClick: () => removeFriend(friend._id),\n          children: \"Unfriend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 29\n        }, this)]\n      }, friend._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"Recommendations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: recommendations.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No recommendations found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 21\n      }, this) : recommendations.map(rec => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"username\",\n          children: rec.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mutual-friends\",\n          children: [\"Mutual Friends: \", rec.mutualFriendsCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-add\",\n          onClick: () => addFriend(rec._id),\n          children: \"Add Friend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 29\n        }, this)]\n      }, rec._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"Friend Requests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: friendRequests.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No friend requests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 21\n      }, this) : friendRequests.map(request => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"username\",\n          children: request.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-accept\",\n          onClick: () => acceptRequest(request._id),\n          children: \"Accept\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-reject\",\n          onClick: () => rejectRequest(request._id),\n          children: \"Reject\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 29\n        }, this)]\n      }, request._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-logout\",\n      onClick: logout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 357,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"nG62MNM/5UND6ZOr//IIRXzR4E0=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","axios","toast","ToastContainer","useNavigate","jsxDEV","_jsxDEV","Home","_s","users","setUsers","friends","setFriends","recommendations","setRecommendations","friendRequests","setFriendRequests","searchTerm","setSearchTerm","currentUser","setCurrentUser","navigate","token","localStorage","getItem","fetchData","userResponse","get","headers","Authorization","data","usersResponse","friendsResponse","recommendationsResponse","friendRequestsResponse","error","console","addFriend","userId","post","success","filter","user","_id","rec","friendResponse","response","message","acceptRequest","request","rejectRequest","removeFriend","friendId","delete","friend","logout","removeItem","filteredUsers","username","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","length","map","onClick","mutualFriendsCount","_c","$RefreshReg$"],"sources":["/Users/aasthachandel/my-app/frontend/src/components/Home.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { toast, ToastContainer } from 'react-toastify';\n// import { useNavigate } from 'react-router-dom';  // Import useNavigate for redirection\n// import 'react-toastify/dist/ReactToastify.css';\n// import './Home.css'; // Import the CSS file\n\n// const Home = () => {\n\n//     const [users, setUsers] = useState([]);\n//     const [friends, setFriends] = useState([]);\n//     const [recommendations, setRecommendations] = useState([]);\n//     const [friendRequests, setFriendRequests] = useState([]);\n//     const [searchTerm, setSearchTerm] = useState(''); // State for search term\n//     const navigate = useNavigate();  // Initialize useNavigate\n\n//     const token = localStorage.getItem('token');\n\n//     useEffect(() => {\n//         const fetchData = async () => {\n//             try {\n//                 // Fetch users\n//                 const userResponse = await axios.get('http://localhost:3000/api/users', {\n//                     headers: { Authorization: `Bearer ${token}` }\n//                 });\n//                 setUsers(userResponse.data);\n\n//                 // Fetch friends\n//                 const friendResponse = await axios.get('http://localhost:3000/api/friends', {\n//                     headers: { Authorization: `Bearer ${token}` }\n//                 });\n//                 setFriends(friendResponse.data);\n\n//                 // Fetch recommendations\n//                 const recommendationResponse = await axios.get('http://localhost:3000/api/recommendations', {\n//                     headers: { Authorization: `Bearer ${token}` }\n//                 });\n//                 setRecommendations(recommendationResponse.data);\n//                 console.log(\"recomm\", recommendationResponse.data)\n//                 // Fetch friend requests\n//                 const requestResponse = await axios.get('http://localhost:3000/api/friend-requests', {\n//                     headers: { Authorization: `Bearer ${token}` }\n//                 });\n//                 setFriendRequests(requestResponse.data);\n\n//             } catch (error) {\n//                 console.error('Error fetching data', error);\n//             }\n//         };\n//         fetchData();\n//     }, [token]);\n\n//     const addFriend = async (userId) => {\n//         try {\n//             await axios.post(\n//                 'http://localhost:3000/api/friend-request',\n//                 { userId },\n//                 { headers: { Authorization: `Bearer ${token}` } }\n//             );\n//             toast.success(\"Friend request sent\");\n\n//             setUsers(users.filter(user => user._id !== userId));\n//             setRecommendations(recommendations.filter(rec => rec._id !== userId));\n\n//             const friendResponse = await axios.get('http://localhost:3000/api/friends', {\n//                 headers: { Authorization: `Bearer ${token}` }\n//             });\n//             setFriends(friendResponse.data);\n\n//         } catch (error) {\n//             console.error('Error sending friend request', error.response ? error.response.data : error.message);\n//         }\n//     };\n\n//     const acceptRequest = async (userId) => {\n//         try {\n//             await axios.post(\n//                 'http://localhost:3000/api/friend-request/accept',\n//                 { userId },\n//                 { headers: { Authorization: `Bearer ${token}` } }\n//             );\n//             toast.success(\"Friend request accepted\");\n\n//             setFriendRequests(friendRequests.filter(request => request._id !== userId));\n\n//             const friendResponse = await axios.get('http://localhost:3000/api/friends', {\n//                 headers: { Authorization: `Bearer ${token}` }\n//             });\n//             setFriends(friendResponse.data);\n\n//         } catch (error) {\n//             console.error('Error accepting friend request', error.response ? error.response.data : error.message);\n//         }\n//     };\n\n//     const rejectRequest = async (userId) => {\n//         try {\n//             await axios.post(\n//                 'http://localhost:3000/api/friend-request/reject',\n//                 { userId },\n//                 { headers: { Authorization: `Bearer ${token}` } }\n//             );\n//             toast.success(\"Friend request rejected\");\n\n//             setFriendRequests(friendRequests.filter(request => request._id !== userId));\n\n//         } catch (error) {\n//             console.error('Error rejecting friend request', error.response ? error.response.data : error.message);\n//         }\n//     };\n\n//     const removeFriend = async (friendId) => {\n//         try {\n//             await axios.delete(`http://localhost:3000/api/friend/${friendId}`, {\n//                 headers: { Authorization: `Bearer ${token}` }\n//             });\n//             toast.success(\"Friend removed\");\n\n//             setFriends(friends.filter(friend => friend._id !== friendId));\n\n//         } catch (error) {\n//             console.error('Error removing friend', error.response ? error.response.data : error.message);\n//         }\n//     };\n\n//     // Logout function\n//     const logout = () => {\n//         localStorage.removeItem('token');  // Remove token from localStorage\n//         toast.success(\"Logged out successfully\");\n//         navigate('/login');  // Redirect to login page\n//     };\n\n//     // Filter users based on search term\n//     const filteredUsers = users.filter(user =>\n//         user.username.toLowerCase().includes(searchTerm.toLowerCase())\n//     );\n\n//     return (\n\n//         <div className=\"container\">\n\n//             <h2 className=\"title\">All Users</h2>\n//             <input\n//                 type=\"text\"\n//                 placeholder=\"Search users...\"\n//                 value={searchTerm}\n//                 onChange={(e) => setSearchTerm(e.target.value)}  // Update search term\n//                 className=\"search-input\"\n//             />\n\n//             <div className=\"list\">\n//                 {filteredUsers.length === 0 ? (\n//                     <p>No users found</p>\n//                 ) : (\n//                     filteredUsers.map(user => (\n//                         <div className=\"user-card\" key={user._id}>\n//                             <span className=\"username\">{user.username}</span>\n//                             <button className=\"btn btn-add\" onClick={() => addFriend(user._id)}>Add Friend</button>\n//                         </div>\n//                     ))\n//                 )}\n//             </div>\n\n//             <h2 className=\"title\">Friends List</h2>\n//             <div className=\"list\">\n//                 {friends.length === 0 ? (\n//                     <p>You have no friends yet.</p>\n//                 ) : (\n//                     friends.map(friend => (\n//                         <div className=\"user-card\" key={friend._id}>\n//                             <span className=\"username\">{friend.username}</span>\n//                             <button className=\"btn btn-remove\" onClick={() => removeFriend(friend._id)}>Unfriend</button>\n//                         </div>\n//                     ))\n//                 )}\n//             </div>\n\n//             <h2 className=\"title\">Recommendations</h2>\n//             <div className=\"list\">\n//                 {recommendations.length === 0 ? (\n//                     <p>No recommendations found</p>\n//                 ) : (\n//                     recommendations.map(rec => (\n//                         <div className=\"user-card\" key={rec._id}>\n//                             <span className=\"username\">{rec.username}</span>\n//                             <span className=\"mutual-friends\">Mutual Friends: {rec.mutualFriendsCount}</span>\n//                             <button className=\"btn btn-add\" onClick={() => addFriend(rec._id)}>Add Friend</button>\n//                         </div>\n//                     ))\n//                 )}\n//             </div>\n\n//             <h2 className=\"title\">Friend Requests</h2>\n//             <div className=\"list\">\n//                 {friendRequests.length === 0 ? (\n//                     <p>No friend requests</p>\n//                 ) : (\n//                     friendRequests.map(request => (\n//                         <div className=\"user-card\" key={request._id}>\n//                             <span className=\"username\">{request.username}</span>\n//                             <button className=\"btn btn-accept\" onClick={() => acceptRequest(request._id)}>Accept</button>\n//                             <button className=\"btn btn-reject\" onClick={() => rejectRequest(request._id)}>Reject</button>\n//                         </div>\n//                     ))\n//                 )}\n//             </div>\n\n//             <button className=\"btn btn-logout\" onClick={logout}>Logout</button>  {/* Logout button */}\n\n//             <ToastContainer />\n//         </div>\n//     );\n// };\n\n// export default Home;\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './Home.css';\n\nconst Home = () => {\n    const [users, setUsers] = useState([]);\n    const [friends, setFriends] = useState([]);\n    const [recommendations, setRecommendations] = useState([]);\n    const [friendRequests, setFriendRequests] = useState([]);\n    const [searchTerm, setSearchTerm] = useState('');\n    const [currentUser, setCurrentUser] = useState(null); // State for current user\n    const navigate = useNavigate();\n    const token = localStorage.getItem('token');\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                // Fetch current user\n                const userResponse = await axios.get('http://localhost:3000/api/me', {\n                    headers: { Authorization: `Bearer ${token}` }\n                });\n                setCurrentUser(userResponse.data);\n\n                // Fetch users\n                const usersResponse = await axios.get('http://localhost:3000/api/users', {\n                    headers: { Authorization: `Bearer ${token}` }\n                });\n                setUsers(usersResponse.data);\n\n                // Fetch friends\n                const friendsResponse = await axios.get('http://localhost:3000/api/friends', {\n                    headers: { Authorization: `Bearer ${token}` }\n                });\n                setFriends(friendsResponse.data);\n\n                // Fetch recommendations\n                const recommendationsResponse = await axios.get('http://localhost:3000/api/recommendations', {\n                    headers: { Authorization: `Bearer ${token}` }\n                });\n                setRecommendations(recommendationsResponse.data);\n\n                // Fetch friend requests\n                const friendRequestsResponse = await axios.get('http://localhost:3000/api/friend-requests', {\n                    headers: { Authorization: `Bearer ${token}` }\n                });\n                setFriendRequests(friendRequestsResponse.data);\n\n            } catch (error) {\n                console.error('Error fetching data', error);\n            }\n        };\n        fetchData();\n    }, [token]);\n\n    const addFriend = async (userId) => {\n        try {\n            await axios.post(\n                'http://localhost:3000/api/friend-request',\n                { userId },\n                { headers: { Authorization: `Bearer ${token}` } }\n            );\n            toast.success(\"Friend request sent\");\n\n            setUsers(users.filter(user => user._id !== userId));\n            setRecommendations(recommendations.filter(rec => rec._id !== userId));\n\n            const friendResponse = await axios.get('http://localhost:3000/api/friends', {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n            setFriends(friendResponse.data);\n\n        } catch (error) {\n            console.error('Error sending friend request', error.response ? error.response.data : error.message);\n        }\n    };\n\n    const acceptRequest = async (userId) => {\n        try {\n            await axios.post(\n                'http://localhost:3000/api/friend-request/accept',\n                { userId },\n                { headers: { Authorization: `Bearer ${token}` } }\n            );\n            toast.success(\"Friend request accepted\");\n\n            setFriendRequests(friendRequests.filter(request => request._id !== userId));\n\n            const friendResponse = await axios.get('http://localhost:3000/api/friends', {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n            setFriends(friendResponse.data);\n\n        } catch (error) {\n            console.error('Error accepting friend request', error.response ? error.response.data : error.message);\n        }\n    };\n\n    const rejectRequest = async (userId) => {\n        try {\n            await axios.post(\n                'http://localhost:3000/api/friend-request/reject',\n                { userId },\n                { headers: { Authorization: `Bearer ${token}` } }\n            );\n            toast.success(\"Friend request rejected\");\n\n            setFriendRequests(friendRequests.filter(request => request._id !== userId));\n\n        } catch (error) {\n            console.error('Error rejecting friend request', error.response ? error.response.data : error.message);\n        }\n    };\n\n    const removeFriend = async (friendId) => {\n        try {\n            await axios.delete(`http://localhost:3000/api/friend/${friendId}`, {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n            toast.success(\"Friend removed\");\n\n            setFriends(friends.filter(friend => friend._id !== friendId));\n\n        } catch (error) {\n            console.error('Error removing friend', error.response ? error.response.data : error.message);\n        }\n    };\n\n    const logout = () => {\n        localStorage.removeItem('token');\n        toast.success(\"Logged out successfully\");\n        navigate('/login');\n    };\n\n    const filteredUsers = users.filter(user =>\n        user.username.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n\n    return (\n        <div className=\"container\">\n            {currentUser && (\n                <div className=\"user-info\">\n                    <h1>Welcome, {currentUser.username}!</h1> {/* Display current user's name */}\n                </div>\n            )}\n\n            <h2 className=\"title\">All Users</h2>\n            <input\n                type=\"text\"\n                placeholder=\"Search users...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"search-input\"\n            />\n\n            <div className=\"list\">\n                {filteredUsers.length === 0 ? (\n                    <p>No users found</p>\n                ) : (\n                    filteredUsers.map(user => (\n                        <div className=\"user-card\" key={user._id}>\n                            <span className=\"username\">{user.username}</span>\n                            <button className=\"btn btn-add\" onClick={() => addFriend(user._id)}>Add Friend</button>\n                        </div>\n                    ))\n                )}\n            </div>\n\n            <h2 className=\"title\">Friends List</h2>\n            <div className=\"list\">\n                {friends.length === 0 ? (\n                    <p>You have no friends yet.</p>\n                ) : (\n                    friends.map(friend => (\n                        <div className=\"user-card\" key={friend._id}>\n                            <span className=\"username\">{friend.username}</span>\n                            <button className=\"btn btn-remove\" onClick={() => removeFriend(friend._id)}>Unfriend</button>\n                        </div>\n                    ))\n                )}\n            </div>\n\n            <h2 className=\"title\">Recommendations</h2>\n            <div className=\"list\">\n                {recommendations.length === 0 ? (\n                    <p>No recommendations found</p>\n                ) : (\n                    recommendations.map(rec => (\n                        <div className=\"user-card\" key={rec._id}>\n                            <span className=\"username\">{rec.username}</span>\n                            <span className=\"mutual-friends\">Mutual Friends: {rec.mutualFriendsCount}</span>\n                            <button className=\"btn btn-add\" onClick={() => addFriend(rec._id)}>Add Friend</button>\n                        </div>\n                    ))\n                )}\n            </div>\n\n            <h2 className=\"title\">Friend Requests</h2>\n            <div className=\"list\">\n                {friendRequests.length === 0 ? (\n                    <p>No friend requests</p>\n                ) : (\n                    friendRequests.map(request => (\n                        <div className=\"user-card\" key={request._id}>\n                            <span className=\"username\">{request.username}</span>\n                            <button className=\"btn btn-accept\" onClick={() => acceptRequest(request._id)}>Accept</button>\n                            <button className=\"btn btn-reject\" onClick={() => rejectRequest(request._id)}>Reject</button>\n                        </div>\n                    ))\n                )}\n            </div>\n\n            <button className=\"btn btn-logout\" onClick={logout}>Logout</button>\n\n            <ToastContainer />\n        </div>\n    );\n};\n\nexport default Home;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,cAAc,QAAQ,gBAAgB;AACtD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,uCAAuC;AAC9C,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACtD,MAAMqB,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAC9B,MAAMkB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3CzB,SAAS,CAAC,MAAM;IACZ,MAAM0B,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA;QACA,MAAMC,YAAY,GAAG,MAAMzB,KAAK,CAAC0B,GAAG,CAAC,8BAA8B,EAAE;UACjEC,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUP,KAAK;UAAG;QAChD,CAAC,CAAC;QACFF,cAAc,CAACM,YAAY,CAACI,IAAI,CAAC;;QAEjC;QACA,MAAMC,aAAa,GAAG,MAAM9B,KAAK,CAAC0B,GAAG,CAAC,iCAAiC,EAAE;UACrEC,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUP,KAAK;UAAG;QAChD,CAAC,CAAC;QACFZ,QAAQ,CAACqB,aAAa,CAACD,IAAI,CAAC;;QAE5B;QACA,MAAME,eAAe,GAAG,MAAM/B,KAAK,CAAC0B,GAAG,CAAC,mCAAmC,EAAE;UACzEC,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUP,KAAK;UAAG;QAChD,CAAC,CAAC;QACFV,UAAU,CAACoB,eAAe,CAACF,IAAI,CAAC;;QAEhC;QACA,MAAMG,uBAAuB,GAAG,MAAMhC,KAAK,CAAC0B,GAAG,CAAC,2CAA2C,EAAE;UACzFC,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUP,KAAK;UAAG;QAChD,CAAC,CAAC;QACFR,kBAAkB,CAACmB,uBAAuB,CAACH,IAAI,CAAC;;QAEhD;QACA,MAAMI,sBAAsB,GAAG,MAAMjC,KAAK,CAAC0B,GAAG,CAAC,2CAA2C,EAAE;UACxFC,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUP,KAAK;UAAG;QAChD,CAAC,CAAC;QACFN,iBAAiB,CAACkB,sBAAsB,CAACJ,IAAI,CAAC;MAElD,CAAC,CAAC,OAAOK,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC/C;IACJ,CAAC;IACDV,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAACH,KAAK,CAAC,CAAC;EAEX,MAAMe,SAAS,GAAG,MAAOC,MAAM,IAAK;IAChC,IAAI;MACA,MAAMrC,KAAK,CAACsC,IAAI,CACZ,0CAA0C,EAC1C;QAAED;MAAO,CAAC,EACV;QAAEV,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUP,KAAK;QAAG;MAAE,CACpD,CAAC;MACDpB,KAAK,CAACsC,OAAO,CAAC,qBAAqB,CAAC;MAEpC9B,QAAQ,CAACD,KAAK,CAACgC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,GAAG,KAAKL,MAAM,CAAC,CAAC;MACnDxB,kBAAkB,CAACD,eAAe,CAAC4B,MAAM,CAACG,GAAG,IAAIA,GAAG,CAACD,GAAG,KAAKL,MAAM,CAAC,CAAC;MAErE,MAAMO,cAAc,GAAG,MAAM5C,KAAK,CAAC0B,GAAG,CAAC,mCAAmC,EAAE;QACxEC,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUP,KAAK;QAAG;MAChD,CAAC,CAAC;MACFV,UAAU,CAACiC,cAAc,CAACf,IAAI,CAAC;IAEnC,CAAC,CAAC,OAAOK,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAACW,QAAQ,GAAGX,KAAK,CAACW,QAAQ,CAAChB,IAAI,GAAGK,KAAK,CAACY,OAAO,CAAC;IACvG;EACJ,CAAC;EAED,MAAMC,aAAa,GAAG,MAAOV,MAAM,IAAK;IACpC,IAAI;MACA,MAAMrC,KAAK,CAACsC,IAAI,CACZ,iDAAiD,EACjD;QAAED;MAAO,CAAC,EACV;QAAEV,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUP,KAAK;QAAG;MAAE,CACpD,CAAC;MACDpB,KAAK,CAACsC,OAAO,CAAC,yBAAyB,CAAC;MAExCxB,iBAAiB,CAACD,cAAc,CAAC0B,MAAM,CAACQ,OAAO,IAAIA,OAAO,CAACN,GAAG,KAAKL,MAAM,CAAC,CAAC;MAE3E,MAAMO,cAAc,GAAG,MAAM5C,KAAK,CAAC0B,GAAG,CAAC,mCAAmC,EAAE;QACxEC,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUP,KAAK;QAAG;MAChD,CAAC,CAAC;MACFV,UAAU,CAACiC,cAAc,CAACf,IAAI,CAAC;IAEnC,CAAC,CAAC,OAAOK,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAACW,QAAQ,GAAGX,KAAK,CAACW,QAAQ,CAAChB,IAAI,GAAGK,KAAK,CAACY,OAAO,CAAC;IACzG;EACJ,CAAC;EAED,MAAMG,aAAa,GAAG,MAAOZ,MAAM,IAAK;IACpC,IAAI;MACA,MAAMrC,KAAK,CAACsC,IAAI,CACZ,iDAAiD,EACjD;QAAED;MAAO,CAAC,EACV;QAAEV,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUP,KAAK;QAAG;MAAE,CACpD,CAAC;MACDpB,KAAK,CAACsC,OAAO,CAAC,yBAAyB,CAAC;MAExCxB,iBAAiB,CAACD,cAAc,CAAC0B,MAAM,CAACQ,OAAO,IAAIA,OAAO,CAACN,GAAG,KAAKL,MAAM,CAAC,CAAC;IAE/E,CAAC,CAAC,OAAOH,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAACW,QAAQ,GAAGX,KAAK,CAACW,QAAQ,CAAChB,IAAI,GAAGK,KAAK,CAACY,OAAO,CAAC;IACzG;EACJ,CAAC;EAED,MAAMI,YAAY,GAAG,MAAOC,QAAQ,IAAK;IACrC,IAAI;MACA,MAAMnD,KAAK,CAACoD,MAAM,CAAC,oCAAoCD,QAAQ,EAAE,EAAE;QAC/DxB,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUP,KAAK;QAAG;MAChD,CAAC,CAAC;MACFpB,KAAK,CAACsC,OAAO,CAAC,gBAAgB,CAAC;MAE/B5B,UAAU,CAACD,OAAO,CAAC8B,MAAM,CAACa,MAAM,IAAIA,MAAM,CAACX,GAAG,KAAKS,QAAQ,CAAC,CAAC;IAEjE,CAAC,CAAC,OAAOjB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACW,QAAQ,GAAGX,KAAK,CAACW,QAAQ,CAAChB,IAAI,GAAGK,KAAK,CAACY,OAAO,CAAC;IAChG;EACJ,CAAC;EAED,MAAMQ,MAAM,GAAGA,CAAA,KAAM;IACjBhC,YAAY,CAACiC,UAAU,CAAC,OAAO,CAAC;IAChCtD,KAAK,CAACsC,OAAO,CAAC,yBAAyB,CAAC;IACxCnB,QAAQ,CAAC,QAAQ,CAAC;EACtB,CAAC;EAED,MAAMoC,aAAa,GAAGhD,KAAK,CAACgC,MAAM,CAACC,IAAI,IACnCA,IAAI,CAACgB,QAAQ,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC3C,UAAU,CAAC0C,WAAW,CAAC,CAAC,CACjE,CAAC;EAED,oBACIrD,OAAA;IAAKuD,SAAS,EAAC,WAAW;IAAAC,QAAA,GACrB3C,WAAW,iBACRb,OAAA;MAAKuD,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACtBxD,OAAA;QAAAwD,QAAA,GAAI,WAAS,EAAC3C,WAAW,CAACuC,QAAQ,EAAC,GAAC;MAAA;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CACR,eAED5D,OAAA;MAAIuD,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpC5D,OAAA;MACI6D,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,iBAAiB;MAC7BC,KAAK,EAAEpD,UAAW;MAClBqD,QAAQ,EAAGC,CAAC,IAAKrD,aAAa,CAACqD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC/CR,SAAS,EAAC;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,eAEF5D,OAAA;MAAKuD,SAAS,EAAC,MAAM;MAAAC,QAAA,EAChBL,aAAa,CAACgB,MAAM,KAAK,CAAC,gBACvBnE,OAAA;QAAAwD,QAAA,EAAG;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,GAErBT,aAAa,CAACiB,GAAG,CAAChC,IAAI,iBAClBpC,OAAA;QAAKuD,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACtBxD,OAAA;UAAMuD,SAAS,EAAC,UAAU;UAAAC,QAAA,EAAEpB,IAAI,CAACgB;QAAQ;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACjD5D,OAAA;UAAQuD,SAAS,EAAC,aAAa;UAACc,OAAO,EAAEA,CAAA,KAAMtC,SAAS,CAACK,IAAI,CAACC,GAAG,CAAE;UAAAmB,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAF3DxB,IAAI,CAACC,GAAG;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGnC,CACR;IACJ;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAEN5D,OAAA;MAAIuD,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvC5D,OAAA;MAAKuD,SAAS,EAAC,MAAM;MAAAC,QAAA,EAChBnD,OAAO,CAAC8D,MAAM,KAAK,CAAC,gBACjBnE,OAAA;QAAAwD,QAAA,EAAG;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,GAE/BvD,OAAO,CAAC+D,GAAG,CAACpB,MAAM,iBACdhD,OAAA;QAAKuD,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACtBxD,OAAA;UAAMuD,SAAS,EAAC,UAAU;UAAAC,QAAA,EAAER,MAAM,CAACI;QAAQ;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnD5D,OAAA;UAAQuD,SAAS,EAAC,gBAAgB;UAACc,OAAO,EAAEA,CAAA,KAAMxB,YAAY,CAACG,MAAM,CAACX,GAAG,CAAE;UAAAmB,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAFjEZ,MAAM,CAACX,GAAG;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGrC,CACR;IACJ;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAEN5D,OAAA;MAAIuD,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1C5D,OAAA;MAAKuD,SAAS,EAAC,MAAM;MAAAC,QAAA,EAChBjD,eAAe,CAAC4D,MAAM,KAAK,CAAC,gBACzBnE,OAAA;QAAAwD,QAAA,EAAG;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,GAE/BrD,eAAe,CAAC6D,GAAG,CAAC9B,GAAG,iBACnBtC,OAAA;QAAKuD,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACtBxD,OAAA;UAAMuD,SAAS,EAAC,UAAU;UAAAC,QAAA,EAAElB,GAAG,CAACc;QAAQ;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAChD5D,OAAA;UAAMuD,SAAS,EAAC,gBAAgB;UAAAC,QAAA,GAAC,kBAAgB,EAAClB,GAAG,CAACgC,kBAAkB;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAChF5D,OAAA;UAAQuD,SAAS,EAAC,aAAa;UAACc,OAAO,EAAEA,CAAA,KAAMtC,SAAS,CAACO,GAAG,CAACD,GAAG,CAAE;UAAAmB,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAH1DtB,GAAG,CAACD,GAAG;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIlC,CACR;IACJ;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAEN5D,OAAA;MAAIuD,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1C5D,OAAA;MAAKuD,SAAS,EAAC,MAAM;MAAAC,QAAA,EAChB/C,cAAc,CAAC0D,MAAM,KAAK,CAAC,gBACxBnE,OAAA;QAAAwD,QAAA,EAAG;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,GAEzBnD,cAAc,CAAC2D,GAAG,CAACzB,OAAO,iBACtB3C,OAAA;QAAKuD,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACtBxD,OAAA;UAAMuD,SAAS,EAAC,UAAU;UAAAC,QAAA,EAAEb,OAAO,CAACS;QAAQ;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpD5D,OAAA;UAAQuD,SAAS,EAAC,gBAAgB;UAACc,OAAO,EAAEA,CAAA,KAAM3B,aAAa,CAACC,OAAO,CAACN,GAAG,CAAE;UAAAmB,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC7F5D,OAAA;UAAQuD,SAAS,EAAC,gBAAgB;UAACc,OAAO,EAAEA,CAAA,KAAMzB,aAAa,CAACD,OAAO,CAACN,GAAG,CAAE;UAAAmB,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAHjEjB,OAAO,CAACN,GAAG;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAItC,CACR;IACJ;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAEN5D,OAAA;MAAQuD,SAAS,EAAC,gBAAgB;MAACc,OAAO,EAAEpB,MAAO;MAAAO,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEnE5D,OAAA,CAACH,cAAc;MAAA4D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEd,CAAC;AAAC1D,EAAA,CApNID,IAAI;EAAA,QAOWH,WAAW;AAAA;AAAAyE,EAAA,GAP1BtE,IAAI;AAsNV,eAAeA,IAAI;AAAC,IAAAsE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}