{"ast":null,"code":"var _jsxFileName = \"/Users/aasthachandel/my-app/frontend/src/components/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'; // Import the default styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [friends, setFriends] = useState([]);\n  const [recommendations, setRecommendations] = useState([]);\n  const token = localStorage.getItem('token');\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const userResponse = await axios.get('http://localhost:3000/api/users', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setUsers(userResponse.data);\n        console.log(\"worked\");\n        const friendResponse = await axios.get('http://localhost:3000/api/friends', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setFriends(friendResponse.data);\n        console.log(\"response\", friendResponse.data);\n        const recommendationResponse = await axios.get('http://localhost:3000/api/recommendations', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log(\"done\");\n        setRecommendations(recommendationResponse.data);\n        console.log(\"recom\", recommendationResponse.data.username);\n        if (friendResponse.data.length > 0) {\n          // Assuming the response structure includes friendRequests\n          const currentUser = friendResponse.data.find(user => user._id === req.user.userId); // Adjust based on actual response\n          if (currentUser) {\n            setFriendRequests(currentUser.friendRequests);\n            console.log(\"Friend Requests:\", currentUser.friendRequests);\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching data', error);\n      }\n    };\n    fetchData();\n  }, [token]); // Notice 'users' is not included here\n\n  const addFriend = async userId => {\n    try {\n      // Send friend request\n      const response = await axios.post('http://localhost:3000/api/friend-request', {\n        userId\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log('Friend request sent', response.data);\n      toast.success(\"Friend request sent\"); // Display error toast\n      // Update state: Remove user from `users` and add to `friends`\n      setUsers(users.filter(user => user._id !== userId));\n      // Optionally, you may want to refetch the friends list or update it manually if needed\n      const friendResponse = await axios.get('http://localhost:3000/api/friends', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setFriends(friendResponse.data);\n    } catch (error) {\n      console.error('Error sending friend request', error.response ? error.response.data : error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), users.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No users found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this) : users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [user.username, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addFriend(user._id),\n        children: \"Add Friend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 41\n      }, this)]\n    }, user._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }, this)), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Friends List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), friends.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You have no friends yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this) : friends.map(friend => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [friend.username, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Unfriend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 43\n      }, this)]\n    }, friend._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }, this)), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Recommendations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), recommendations.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No recommendations found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 45\n    }, this) : recommendations.map(rec => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [rec.username, \" (Mutual Friends: \", rec.mutualFriendsCount, \") \", /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add Friend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 79\n      }, this)]\n    }, rec._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"Z1bT/Q/GbnGxgK/yI+x98dIt6dA=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","axios","toast","ToastContainer","jsxDEV","_jsxDEV","Home","_s","users","setUsers","friends","setFriends","recommendations","setRecommendations","token","localStorage","getItem","fetchData","userResponse","get","headers","Authorization","data","console","log","friendResponse","recommendationResponse","username","length","currentUser","find","user","_id","req","userId","setFriendRequests","friendRequests","error","addFriend","response","post","success","filter","message","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","friend","rec","mutualFriendsCount","_c","$RefreshReg$"],"sources":["/Users/aasthachandel/my-app/frontend/src/components/Home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'; // Import the default styles\nconst Home = () => {\n    const [users, setUsers] = useState([]);\n    const [friends, setFriends] = useState([]);\n    const [recommendations, setRecommendations] = useState([]);\n\n    const token = localStorage.getItem('token');\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const userResponse = await axios.get('http://localhost:3000/api/users', {\n                    headers: { Authorization: `Bearer ${token}` }\n\n\n                });\n                setUsers(userResponse.data);\n                console.log(\"worked\");\n                const friendResponse = await axios.get('http://localhost:3000/api/friends', {\n                    headers: { Authorization: `Bearer ${token}` }\n                });\n                setFriends(friendResponse.data);\n                console.log(\"response\", friendResponse.data)\n                const recommendationResponse = await axios.get('http://localhost:3000/api/recommendations', {\n                    headers: { Authorization: `Bearer ${token}` }\n                });\n                console.log(\"done\")\n\n\n                setRecommendations(recommendationResponse.data);\n                console.log(\"recom\", recommendationResponse.data.username)\n\n                if (friendResponse.data.length > 0) {\n                    // Assuming the response structure includes friendRequests\n                    const currentUser = friendResponse.data.find(user => user._id === req.user.userId); // Adjust based on actual response\n                    if (currentUser) {\n                        setFriendRequests(currentUser.friendRequests);\n                        console.log(\"Friend Requests:\", currentUser.friendRequests);\n                    }\n                }\n\n            } catch (error) {\n                console.error('Error fetching data', error);\n            }\n        };\n        fetchData();\n    }, [token]); // Notice 'users' is not included here\n\n\n\n\n    const addFriend = async (userId) => {\n        try {\n            // Send friend request\n            const response = await axios.post(\n                'http://localhost:3000/api/friend-request',\n                { userId },\n                { headers: { Authorization: `Bearer ${token}` } }\n            );\n            console.log('Friend request sent', response.data);\n            toast.success(\"Friend request sent\"); // Display error toast\n            // Update state: Remove user from `users` and add to `friends`\n            setUsers(users.filter(user => user._id !== userId));\n            // Optionally, you may want to refetch the friends list or update it manually if needed\n            const friendResponse = await axios.get('http://localhost:3000/api/friends', {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n            setFriends(friendResponse.data);\n\n        } catch (error) {\n            console.error('Error sending friend request', error.response ? error.response.data : error.message);\n        }\n    };\n    return (\n        <div>\n            <h2>All Users</h2>\n            {users.length === 0 ? (\n                <p>No users found</p>\n            ) : (\n                users.map(user => (\n                    <div key={user._id}>\n                        {user.username} <button onClick={() => addFriend(user._id)}>Add Friend</button>\n                    </div>\n                ))\n            )}\n\n            <h1>Friends List</h1>\n            {friends.length === 0 ? (\n                <p>You have no friends yet.</p>\n            ) : (\n                friends.map(friend => (\n                    <div key={friend._id}>\n                        {friend.username} <button>Unfriend</button>\n                    </div>\n                ))\n            )}\n\n            {/* \n            {users.length === 0 ? <p>No users found</p> : users.map(user => (\n                <div key={user._id}>\n                    {user.username} <button onClick={() => addFriend(user._id)}>Add Friend</button>\n                </div>\n            ))} */}\n            <h1>Recommendations</h1>\n            {recommendations.length === 0 ? <p>No recommendations found</p> : recommendations.map(rec => (\n                <div key={rec._id}>\n                    {rec.username} (Mutual Friends: {rec.mutualFriendsCount}) <button>Add Friend</button>\n                </div>\n            ))}\n            <ToastContainer /> {/* Add this to show toast notifications */}\n        </div>\n    );\n};\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}